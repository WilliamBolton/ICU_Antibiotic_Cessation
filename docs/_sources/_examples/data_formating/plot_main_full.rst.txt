
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/data_formating/plot_main_full.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_data_formating_plot_main_full.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_data_formating_plot_main_full.py:


Grouping Antibiotics
============================

.. GENERATED FROM PYTHON SOURCE LINES 6-80


.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/home/wb1115/ICU_Antibiotic_Cessation/main/examples/data_formating/plot_main_full.py", line 21, in <module>
        data = pd.read_csv(path,
      File "/home/wb1115/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py", line 686, in read_csv
        return _read(filepath_or_buffer, kwds)
      File "/home/wb1115/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py", line 452, in _read
        parser = TextFileReader(fp_or_buf, **kwds)
      File "/home/wb1115/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py", line 946, in __init__
        self._make_engine(self.engine)
      File "/home/wb1115/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py", line 1178, in _make_engine
        self._engine = CParserWrapper(self.f, **self.options)
      File "/home/wb1115/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py", line 2008, in __init__
        self._reader = parsers.TextReader(src, **kwds)
      File "pandas/_libs/parsers.pyx", line 382, in pandas._libs.parsers.TextReader.__cinit__
      File "pandas/_libs/parsers.pyx", line 674, in pandas._libs.parsers.TextReader._setup_parser_source
    FileNotFoundError: [Errno 2] No such file or directory: './data/One_patient_condensed_11803145.csv'






|

.. code-block:: default
   :lineno-start: 6

    # Generic libraries
    import pandas as pd

    # -----------------------------
    # Constants
    # -----------------------------
    # Path
    path = './data/One_patient_condensed_10656173.csv'
    path = './data/One_patient_condensed_11803145.csv'
    #path = './data/ICU_diagnoses_antibiotics.csv'

    # -----------------------------
    # Load data
    # -----------------------------
    # Read data
    data = pd.read_csv(path,
        dayfirst=True,
        parse_dates=['starttime',
                     'stoptime'])

    # Keep only useful columns
    data = data[['subject_id',
                 'hadm_id',
                 'stay_id',
                 'icd_code',
                 'antibiotic',
                 'route',
                 'starttime',
                 'stoptime']]

    # Reformat (time info and str)
    data.starttime = data.starttime.dt.date
    data.stoptime = data.stoptime.dt.date
    data.antibiotic = data.antibiotic \
        .str.lower() \
        .str.strip()

    # Show
    print("\nOriginal Data:")
    print(data)

    # -----------------------------
    # Transform data
    # -----------------------------
    # .. note: The closed parameter indicates whether to include
    #          the first and/or last samples. None will keep both,
    #          left will keep only start date and right will keep
    #          also the right date.
    # Create column with date range
    data['startdate'] = data.apply(lambda x:
        pd.date_range(start=x['starttime'],
                      end=x['stoptime'],
                      closed='left',         # ignoring right
                      freq='D') ,axis=1)

    # Explode such column
    data = data.explode('startdate')

    # Groupby
    groupby = ['subject_id',
               'hadm_id',
               'stay_id',
               'startdate']

    # Create daily therapies
    aux = data.groupby(groupby) \
        .apply(lambda x: sorted(x.antibiotic \
            .unique().tolist()))

    # Show
    print("\nFormatted:")
    print(aux)
    print("\nTherapies (number of days)")
    print(aux.value_counts())


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.005 seconds)


.. _sphx_glr_download__examples_data_formating_plot_main_full.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_main_full.py <plot_main_full.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_main_full.ipynb <plot_main_full.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
